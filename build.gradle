group 'amitkaushikgit.github.io'
version '1.0-SNAPSHOT'

buildscript {
    repositories {
        mavenCentral()
    }
    dependencies {
        classpath("org.springframework.boot:spring-boot-gradle-plugin:1.5.7.RELEASE")
    }
}

apply plugin: 'java'
apply plugin: 'eclipse'
apply plugin: 'idea'
apply plugin: 'org.springframework.boot'
apply plugin: 'application'

jar {
    baseName = 'sample'
    version =  '0.1.0'
    manifest {
        // benutze das im Projekt vorliegende File, falls vorhanden:
        def manif = "${projectDir}/META-INF/MANIFEST.MF"
        if (new File(manif).exists()) {
            from file(manif)
            println("file selected")
        } else {
            logger.info(project.name + " doesn't have a META-INF/MANIFEST.MF.")
            manifest.attributes provider: 'xyz,abc'
            manifest.attributes project: project.name
            manifest.attributes Build: new Date()
        }
    }
}

repositories {
    mavenCentral()
}

sourceCompatibility = 1.8
targetCompatibility = 1.8

dependencies {
    // tag::jetty[]
    compile("org.springframework.boot:spring-boot-starter-web") {
        exclude module: "spring-boot-starter-tomcat"
    }
    compile("org.springframework.boot:spring-boot-starter-jetty")
    // end::jetty[]
    compile 'org.springframework:spring-context'
    // tag::actuator[]
    compile("org.springframework.boot:spring-boot-starter-actuator")
    // JPA Data (We are going to use Repositories, Entities, Hibernate, etc...)
    compile 'org.springframework.boot:spring-boot-starter-data-jpa'
    // Use MySQL Connector-J
    compile 'mysql:mysql-connector-java'
    compile 'org.projectlombok:lombok:1.16.10'
    // end::actuator[]
    testCompile("junit:junit")
}
